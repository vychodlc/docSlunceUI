import { defineComponent as _, computed as l, openBlock as d, createElementBlock as p, normalizeClass as f, unref as a, normalizeStyle as x, renderSlot as g, createElementVNode as I, ref as z, onMounted as E, createBlock as N, Transition as T, withCtx as M, withDirectives as D, toDisplayString as L, vShow as q, createVNode as A, render as S } from "vue";
const O = {
  name: "sl-button"
}, V = /* @__PURE__ */ _({
  ...O,
  props: {
    type: {
      type: String,
      default: "default"
    },
    disabled: Boolean,
    round: Boolean,
    plain: Boolean,
    text: Boolean,
    bg: Boolean,
    size: {
      type: String,
      default: "default"
    },
    color: {
      type: String,
      default: "#000"
    },
    leftIcon: String,
    rightIcon: String,
    localing: Boolean
  },
  setup(t) {
    const e = t, n = (r, v) => {
      let b = [
        parseInt("0x" + r.slice(1, 3)),
        parseInt("0x" + r.slice(3, 5)),
        parseInt("0x" + r.slice(5, 7))
      ], u = [];
      for (var y = 0; y < b.length; y++) {
        let i = b[y] + v;
        i < 0 && (i = 0), i > 255 && (i = 255), u.push(i);
      }
      var k = u[0], B = u[1], C = u[2], w = "#" + ((1 << 24) + (k << 16) + (B << 8) + C).toString(16).slice(1);
      return w;
    }, o = {
      "--custom-color": e.color,
      "--custom-color-hover": n(e.color, 40),
      "--custom-color-active": n(e.color, -40),
      "--custom-color-disabled": n(e.color, 80)
    }, s = l(() => [
      e.size == "medium" ? "sl-button-medium" : e.size == "small" ? "sl-button-small" : e.size == "mini" ? "sl-button-mini" : "sl-button sl-button-normal",
      e.type ? `sl-button-${e.type}` : "",
      e.disabled ? "is-disabled" : "",
      e.plain ? "is-plain" : "",
      e.round ? "is-round" : "",
      e.text ? "is-text" : "",
      e.bg ? "is-bg" : ""
    ]), c = l(() => [
      e.color == "" ? {} : e.type == "default" ? {} : o
    ]);
    return (r, v) => (d(), p("button", {
      class: f(["slButton", a(s)]),
      style: x(a(c))
    }, [
      g(r.$slots, "default", {}, void 0, !0)
    ], 6));
  }
});
const m = (t, e) => {
  const n = t.__vccOpts || t;
  for (const [o, s] of e)
    n[o] = s;
  return n;
}, j = /* @__PURE__ */ m(V, [["__scopeId", "data-v-3dd6ea4a"]]), h = (t) => (t.install = (e) => {
  const n = t.name || t.__name;
  e.component(n, t);
}, t), P = h(j), U = ["width", "height"], F = ["xlink:href"], G = {
  name: "sl-icon"
}, H = /* @__PURE__ */ _({
  ...G,
  props: {
    name: {
      type: String,
      default: ""
    },
    color: {
      type: String,
      default: ""
    },
    width: {
      type: [Number, String],
      default: 60
    },
    height: {
      type: [Number, String],
      default: 60
    }
  },
  setup(t) {
    const e = t, n = l(() => `#icon-${e.name}`), o = l(() => `color: ${e.color}`), s = l(() => ["sl-icon", e.name ? `icon-${e.name}` : ""]);
    return (c, r) => (d(), p("svg", {
      class: f(a(s)),
      style: x(a(o)),
      width: e.width,
      height: e.height,
      "aria-hidden": "true"
    }, [
      I("use", {
        "xlink:href": a(n),
        fill: "currentColor"
      }, null, 8, F)
    ], 14, U));
  }
});
const J = /* @__PURE__ */ m(H, [["__scopeId", "data-v-7d74408c"]]), K = h(J), Q = {
  name: "sl-link"
}, R = /* @__PURE__ */ _({
  ...Q,
  props: {
    type: {
      type: String,
      default: ""
    },
    disabled: {
      type: Boolean,
      default: !1
    },
    underline: {
      type: Boolean,
      default: !0
    }
  },
  setup(t) {
    const e = t, n = l(() => [
      "sl-link",
      e.type ? `sl-link-${e.type}` : "sl-link-default",
      e.disabled ? "is-disabled" : "",
      e.underline ? "" : "no-underline"
    ]);
    return (o, s) => (d(), p("span", {
      class: f(a(n))
    }, [
      g(o.$slots, "default", {}, void 0, !0)
    ], 2));
  }
});
const W = /* @__PURE__ */ m(R, [["__scopeId", "data-v-fa5f001b"]]), X = h(W), Y = {
  key: 0,
  class: "text"
}, Z = {
  name: "Message"
}, ee = /* @__PURE__ */ _({
  ...Z,
  props: {
    type: {
      type: String,
      default: "info"
    },
    text: {
      type: [String, Object],
      default: ""
    }
  },
  setup(t) {
    const e = t, n = l(() => typeof e.text == "string"), o = l(() => e.type ? `sl-message-${e.type}` : "sl-message-info"), s = z(!1);
    return E(() => {
      s.value = !0;
    }), (c, r) => (d(), N(T, { name: "slide-fade" }, {
      default: M(() => [
        D(I("div", {
          class: f(["sl-message", a(o)])
        }, [
          a(n) ? (d(), p("span", Y, L(t.text), 1)) : g(c.$slots, "default", { key: 1 }, void 0, !0)
        ], 2), [
          [q, s.value]
        ])
      ]),
      _: 3
    }));
  }
});
const te = /* @__PURE__ */ m(ee, [["__scopeId", "data-v-99649baf"]]), $ = ({ text: t, type: e = "info", timeout: n = 2500 }) => {
  document.querySelector(".sl-message-container") && document.body.removeChild(
    document.querySelector(".sl-message-container")
  );
  const o = typeof document < "u" && typeof document.createElement < "u" ? document.createElement("div") : void 0;
  o.setAttribute("class", "sl-message-container"), typeof document < "u" && document.body.appendChild(o);
  let s = null;
  const c = A(te, { text: t, type: e, timeout: n }, [t]);
  S(c, o), clearTimeout(s), s = setTimeout(() => {
    S(null, o), typeof document < "u" && document.body.removeChild(o), clearTimeout(s);
  }, n);
}, ne = [
  P,
  K,
  X,
  $
], oe = (t) => {
  ne.forEach((e) => t.component(e.name, e)), t.config.globalProperties.$message = $;
}, le = {
  install: oe
};
export {
  $ as Message,
  le as default,
  P as slButton,
  K as slIcon,
  X as slLink
};
